steps:
  # Step 1: Build container1 with Maven
  - name: 'maven:3.8-openjdk-17'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-f', 'container1/pom.xml']
  
  # Step 2: Build container2 with Maven
  - name: 'maven:3.8-openjdk-17'
    entrypoint: 'mvn'
    args: ['clean', 'package', '-f', 'container2/pom.xml']
  
  # Step 3: Build and push container1 Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container1:$COMMIT_SHA',
      './container1'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container1:$COMMIT_SHA'
    ]
  
  # Step 4: Build and push container2 Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container2:$COMMIT_SHA',
      './container2'
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container2:$COMMIT_SHA'
    ]
    
  # Step 5: Update Kubernetes manifests with new image tags
  - name: 'gcr.io/cloud-builders/kubectl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sed -i "s|IMAGE_TAG_CONTAINER1|${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container1:$COMMIT_SHA|g" kubernetes/*.yaml
        sed -i "s|IMAGE_TAG_CONTAINER2|${_REGION}-docker.pkg.dev/${PROJECT_ID}/my-repo/container2:$COMMIT_SHA|g" kubernetes/*.yaml
    
  # Step 6: Deploy to GKE
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'kubernetes/']
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
      - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'
      - 'CLOUDSDK_PROJECT=${PROJECT_ID}'

substitutions:
  _REGION: us-central1
  _ZONE: us-central1-a
  _CLUSTER_NAME: my-gke-cluster
  PROJECT_ID: ${PROJECT_ID}

options:
  logging: CLOUD_LOGGING_ONLY